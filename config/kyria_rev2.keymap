/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include "keymap_spanish.h"


// Layer definitions
    #define ALPHA 0
    #define LOL 1
    #define SYM 2
    #define NUM 3
    #define NAV 4
    #define SNAP 5
    #define ADJUST 6

// None/Trans
    #define XXXXX &none
    #define _____ &trans
// Shortcuts
    #define RUNNER LA(SPACE)
    #define CLOSE LA(F4)
    #define MO_TOG(layer) &mo_tog layer layer
    #define SL_TOG(layer) &sl_tog layer layer
    #define META(key) LC(LA(LG(key)))
    #define LSG(key) LS(LG(key))

// Encoder resolutions
  &left_encoder   { resolution = <2>; };
  &right_encoder  { resolution = <2>; };

/*
 * Layout Indices
 * 00 01 02 03 04 05               06 07 08 09 10 11
 * 12 13 14 15 16 17               18 19 20 21 22 23
 * 24 25 26 27 28 29 30 31   32 33 34 35 36 37 38 39
 *          40 41 42 43 44   45 46 47 48 49         
 */

/ {
  macros {
    alt_tabber: alt_tabber {
      label = "ZM_alt_tabber";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      wait-ms = <10>;
      bindings
        = <&macro_press &kp LALT>
        , <&macro_tap &kp TAB>
        , <&macro_pause_for_release>
        , <&macro_release &kp LALT>
        ;
    };
  };

  combos {
    compatible = "zmk,combos";
    combo_lol {
      timeout-ms = <50>;
      key-positions = <0 11>;
      bindings = <&to LOL>;
    };
    combo_lol_shop {
      timeout-ms = <50>;
      key-positions = <4 5>;
      bindings = <&kp P>;
    };
    combo_lol_back {
      timeout-ms = <50>;
      key-positions = <29 42>;
      bindings = <&kp B>;
    };
  };

  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
    mo_tog: behavior_mo_tog {
      compatible = "zmk,behavior-hold-tap";
      label = "mo_tog";
      #binding-cells = <2>;
      flavor = "hold-preferred";
      tapping-term-ms = <200>;
      bindings = <&mo>, <&tog>;
    };
    sl_tog: behavior_sl_tog {
      compatible = "zmk,behavior-hold-tap";
      label = "sl_tog";
      #binding-cells = <2>;
      flavor = "hold-preferred";
      tapping-term-ms = <200>;
      bindings = <&sl>, <&tog>;
    };
    td_num: tap_dance_num {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_NUM";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <SL_TOG(NUM)>, <&tog NUM>;
    };
    td_sym: tap_dance_sym {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_SYM";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <SL_TOG(SYM)>, <&tog SYM>;
    };
    td_nav: tap_dance_nav {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_NAV";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <SL_TOG(NAV)>, <&tog NAV>;
    };
    td_snap: tap_dance_snap {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_SNAP";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <SL_TOG(SNAP)>, <&tog SNAP>;
    };
    td_abk: tap_dance_abk {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_ABK";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp ES_LABK>, <&kp ES_RABK>;
    };
    td_prn: tap_dance_prn {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_PRN";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp ES_LPRN>, <&kp ES_RPRN>;
    };
    td_brc: tap_dance_brc {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_BRC";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp ES_LBRC>, <&kp ES_RBRC>;
    };
    td_cbr: tap_dance_cbr {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_CBR";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp ES_LCBR>, <&kp ES_RCBR>;
    };
    td_exlm: tap_dance_exlm {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_EXLM";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp ES_EXLM>, <&kp ES_IEXL>;
    };
    td_ques: tap_dance_ques {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_QUES";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp ES_QUES>, <&kp ES_IQUE>;
    };
  };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
    // -------------------------------------------------------------------------------------------------------------------------
    // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                    |  Y   |  U   |  I   |  O   |  P   |  BS  |
    // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                    |  H   |  J   |  K   |  L   |  Ñ   |   ´  |
    // |RUNNER |  Z  |  X  |  C   |  V   |  B   |         | ENTER |  |       |       |  N   |  M   |  ,   |  .   |  -   | CAPS |
    //                     | ENC1 | NAV  | NUM  |  SPACE  |L SHIFT|  |R SHIFT| SPACE | SYM  | SNAP | ENC2 |
      bindings = <
        &kp ESC    &kp Q &kp W      &kp E       &kp R       &kp T                                                    &kp Y   &kp U       &kp I      &kp O      &kp P       &kp BSPC
        &kp TAB    &kp A &hm LALT S &hm LGUI D  &hm LCTRL F &kp G                                                    &kp H   &hm RCTRL J &hm RGUI K &hm LALT L &kp ES_NTIL &kp ES_ACUT
        &kp RUNNER &kp Z &kp X      &kp C       &kp V       &kp B   XXXXX     XXXXX              XXXXX     XXXXX     &kp N   &kp M       &kp COMMA  &kp DOT    &kp ES_MINS &kp CAPS
                                    &alt_tabber &td_nav     &td_num &kp SPACE &mt LSHFT ENTER    &sk RSHFT &kp SPACE &td_sym &td_snap    &kp C_MUTE
      >;

      sensor-bindings = <&inc_dec_kp LC(LG(LEFT)) LC(LG(RIGHT)) &inc_dec_kp C_VOL_DN C_VOL_UP>;
		};

		lol_layer {
    // ------------------------------------------------------------------------------------------------------------------------
    // |  ESC  |  1   |  2   |  3   |  4   |  5     |                                  |        |     |     |     |     |        |
    // |  TAB  |  Q   |  W   |  E   |  R   |  T     |                                  |        |     |     |     |     |        |
    // |   Z   |  A   |  S   |  D   |  F   |  G     |         |         |  |     |     |        |     |     |     |     | ALPHA  |
    //                       | ENC1 | LALT | LCTRL  |  SPACE  |  ENTER  |  |     |     |  LGUI  |     | ENC2|
      bindings = <
        &kp ESC &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                                      XXXXX    XXXXX XXXXX XXXXX XXXXX XXXXX
        &kp TAB &kp Q  &kp W  &kp E  &kp R  &kp T                                       XXXXX    XXXXX XXXXX XXXXX XXXXX XXXXX
        &kp Z   &kp A  &kp S  &kp D  &kp F  &kp G    XXXXX     XXXXX        XXXXX XXXXX XXXXX    XXXXX XXXXX XXXXX XXXXX &to ALPHA
                       &kt C_MUTE &kp LALT &kp LCTRL &kp SPACE &kp ENTER    XXXXX XXXXX &kp LGUI XXXXX &alt_tabber
      >;

      sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LS(TAB) TAB>;
		};

		sym_layer {
    // -------------------------------------------------------------------------------------------------------------------------
    // |   º   |  1  |  2  |  3   |  4   |  5   |                                    |  6  |  7  |  8   |  9   |  0   |  =  |
    // |   #   |  @  |  '  |  "   |  *   |  /   |                                    |  <  |  (  |  [   |  {   |  |   |  ~  |
    // |   ¬   |  %  |  &  |  €   |  $   |  \   |         |       |  |       |       |  ·  |  !  |  ?   |  +   |  -   |  `  |
    //                     | ENC1 |      |      |         |       |  |       |       |     |     | ENC2 |
      bindings = <
        &kp ES_MORD &kp N1      &kp N2      &kp N3      &kp N4      &kp N5                                   &kp N6      &kp N7   &kp N8   &kp N9      &kp N0      &kp ES_EQL
        &kp ES_HASH &kp ES_AT   &kp ES_QUOT &kp ES_DQUO &kp ES_ASTR &kp ES_SLSH                              &td_abk     &td_prn  &td_brc  &td_cbr     &kp ES_PIPE &kp ES_TILD
        &kp ES_NOT  &kp ES_PERC &kp ES_AMPR &kp ES_EURO &kp ES_DLR  &kp ES_BSLS XXXXX XXXXX      XXXXX XXXXX &kp ES_BULT &td_exlm &td_ques &kp ES_PLUS &kp ES_MINS &kp ES_GRV
                                            &kp CLOSE   _____       _____       _____ _____      _____ _____ _____       _____    &kp C_PLAY_PAUSE
      >;

      sensor-bindings = <&inc_dec_kp LS(TAB) TAB &inc_dec_kp C_VOL_DN C_VOL_UP>;
		};

		num_layer {
    // --------------------------------------------------------------------------------------------------------------------------
    // |       |  F1  |  F2  |   F3  |  F4   |      |                                    |  /  |  7  |  8   |  9   |  -   | BS  |
    // |       |  F5  |  F6  |   F7  |  F8   |      |                                    |  *  |  4  |  5   |  6   |  +   |  ,  |
    // |       |  F9  |  F10 |   F11 |  F12  |      |         |       |  |       |       |  =  |  1  |  2   |  3   |  .   |ENTER|
    //                       |  ENC1 |       |      |         |       |  |       |       |  0  |     | ENC2 |
      bindings = <
        _____ &kp F1 &kp F2      &kp F3      &kp F4       _____                              &kp ES_SLSH &kp N7       &kp N8      &kp N9      &kp ES_MINS &kp BSPC
        _____ &kp F5 &hm LALT F6 &hm LGUI F7 &hm LCTRL F8 _____                              &kp ES_ASTR &hm RCTRL N4 &hm RGUI N5 &hm LALT N6 &kp ES_PLUS &kp COMMA
        _____ &kp F9 &kp F10     &kp F11     &kp F12      _____ XXXXX XXXXX      XXXXX XXXXX &kp ES_EQL  &kp N1       &kp N2      &kp N3      &kp KP_DOT  &kp ENTER
                                             &kp CLOSE    _____ _____ _____      _____ _____ &kp N0      _____        &kp C_PLAY_PAUSE
      >;

      sensor-bindings = <&inc_dec_kp LS(TAB) TAB &inc_dec_kp C_VOL_DN C_VOL_UP>;
		};

		nav_layer {
    // --------------------------------------------------------------------------------------------------------------------
    // |      |     |      |      |  IMPR |      |                                  | C_← | C_↓  | C_↑  | C_→ |INSERT| DEL|
    // |ADJUST|     | LALT | LGUI | LCTRL |SEARCH|                                  | ←   |   ↓  |   ↑  |  →  |INICIO|PgUP|
    // |      |     |  CUT | COPY | PASTE |      |     |     |         |      |     | C_H | C_J  | C_K  | C_L | FIN  |PgDn|
    //                     |      |       |      |     |     |         |      |     |  0  |      | ENC2 |
      bindings = <
        _____          _____ _____      _____     &kp PSCRN _____                                  &kp LC(LEFT) &kp LC(DOWN) &kp LC(UP)  &kp LC(RIGHT) &kp INSERT &kp DELETE
        MO_TOG(ADJUST) _____ &kp LALT   &kp LGUI  &kp LCTRL &kp LC(F)                              &kp LEFT     &kp DOWN     &kp UP      &kp RIGHT     &kp HOME   &kp PG_UP
        _____          _____ &kp LC(X)  &kp LC(C) &kp LC(V) _____     XXXXX XXXXX      XXXXX XXXXX &kp LC(H)    &kp LC(J)    &kp LC(K)   &kp LC(L)     &kp END    &kp PG_DN
                                        &kp CLOSE _____     _____     _____ _____      _____ _____ _____       _____        &kp C_PLAY_PAUSE
      >;

      sensor-bindings = <&inc_dec_kp LS(TAB) TAB &inc_dec_kp C_VOL_DN C_VOL_UP>;
		};

		snap_layer {
    // --------------------------------------------------------------------------------------------------------------
    // |     |     |     |     |     |     |                                  |EXP ←|EXP ↓|EXP ↑|EXP →|      |      |
    // |     |Conf1|Conf2|Conf3|Conf4|Conf5|                                  |  ←  |  ↓  |  ↑  |  →  |      |Config|
    // |     |WIN 1|WIN 2|WIN 3|WIN 4|WIN 5|     |     |         |      |     |     |     |     |     |      |      |
    //                   |     |     |     |     |     |         |      |     |     |     | ENC2|
      bindings = <
        _____          _____ _____      _____     &kp PSCRN _____                                  &kp META(LEFT) &kp META(DOWN) &kp META(UP) &kp META(RIGHT) _____ _____
        MO_TOG(ADJUST) _____ &kp LALT   &kp LGUI  &kp LCTRL &kp LC(F)                              &kp LG(LEFT)   &kp LG(DOWN)   &kp LG(UP)   &kp LG(RIGHT)   _____ &kp LSG(ES_NTIL)
        _____          _____ &kp LC(X)  &kp LC(C) &kp LC(V) _____     XXXXX XXXXX      XXXXX XXXXX _____          _____          _____        _____           _____ _____
                                        &kp CLOSE _____     _____     _____ _____      _____ _____ _____          _____          &kp C_PLAY_PAUSE
      >;

      sensor-bindings = <&inc_dec_kp LS(TAB) TAB &inc_dec_kp C_VOL_DN C_VOL_UP>;
		};

		adjust_layer {
    // ---------------------------------------------------------------------------------------------------------------
    // |     |     |     |     |     |      |                                  |OUT_USB|OUT_TOG|OUT_BLE|       |       |      |
    // |     |     |     |     |     |QWERTY|                                  |BT_CLR |BT_SEL1|BT_SEL2|BT_SEL3|BT_SEL4|      |
    // |     |     |     |     |     |EP_TOG|     |     |         |      |     |       |       |       |       |       |      |
    //                   |     |     |      |     |     |         |      |     |       |       |   ENC2|
      bindings = <
        _____ _____ _____ _____ _____ _____                                          &out OUT_USB   &out OUT_TOG &out OUT_BLE _____        _____         _____
        _____ _____ _____ _____ _____ &to ALPHA                                      &bt BT_CLR     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  _____
        _____ _____ _____ _____ _____ &ext_power EP_TOG XXXXX XXXXX      XXXXX XXXXX _____          _____        _____        _____        _____         _____
                                     _____ _____  _____ _____ _____      _____ _____ _____          _____        _____
      >;

      sensor-bindings = <&inc_dec_kp LS(TAB) TAB &inc_dec_kp C_VOL_DN C_VOL_UP>;
		};
	};
};
